{"version":3,"sources":["bjj_score.module.css","App.js","reportWebVitals.js","index.js"],"names":["module","exports","POINT_VALUES","toDisplayTime","s","date","Date","setSeconds","toISOString","substr","Scoreboard","useState","aScore","setAScore","bScore","setBScore","seconds","clockRunning","setClockRunning","useEffect","interval","setInterval","clearInterval","className","styles","container","timer","onClick","scoreBoard","scoreA","scoreB","buttons","competitor","penalty","reset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef3ab300.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"bjj_score_container__2xE9G\",\"scoreBoard\":\"bjj_score_scoreBoard__rz2Zv\",\"timer\":\"bjj_score_timer__9n92P\",\"scoreA\":\"bjj_score_scoreA__-Jgml\",\"scoreB\":\"bjj_score_scoreB__39m51\",\"buttons\":\"bjj_score_buttons__1vuac\",\"reset\":\"bjj_score_reset__IPB1e\",\"penalty\":\"bjj_score_penalty__3H06y\"};","import styles from \"./bjj_score.module.css\";\n\nimport { useState, useEffect } from \"react\";\n\n//IBJJF Official Rules\nconst POINT_VALUES = {\n  takeDown: 2,\n  sweep: 2,\n  kneeOnBelly: 2,\n  pass: 3,\n  mount: 4,\n  back: 4,\n  penalty: -1,\n  advantage: 0.5,\n};\n\nfunction toDisplayTime(s) {\n  var date = new Date(null);\n  date.setSeconds(s);\n  return date.toISOString().substr(14, 5);\n}\n\nexport default function Scoreboard() {\n  const [aScore, setAScore] = useState(0);\n  const [bScore, setBScore] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [clockRunning, setClockRunning] = useState(false);\n\n  useEffect(() => {\n    let interval = null;\n    if (clockRunning) {\n      interval = setInterval(() => {\n        setSeconds((seconds) => seconds + 1);\n      }, 1000);\n    } else if (!clockRunning && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [clockRunning, seconds]);\n\n  return (\n    <div className={styles.container}>\n      <div\n        className={styles.timer}\n        onClick={() => {\n          setSeconds(0);\n          setClockRunning(!clockRunning);\n        }}\n      >\n        {toDisplayTime(seconds)}\n      </div>\n      <div className={styles.scoreBoard}>\n        <div className={styles.scoreA}>{aScore}</div>\n        <div className={styles.scoreB}>{bScore}</div>\n      </div>\n      <div className={styles.buttons}>\n        <div className={styles.competitor}>\n          <button onClick={() => setAScore(aScore + POINT_VALUES.takeDown)}>\n            Take Down\n          </button>\n          <button onClick={() => setAScore(aScore + POINT_VALUES.sweep)}>\n            Sweep\n          </button>\n          <button onClick={() => setAScore(aScore + POINT_VALUES.kneeOnBelly)}>\n            Knee on Belly\n          </button>\n          <button onClick={() => setAScore(aScore + POINT_VALUES.pass)}>\n            Pass\n          </button>\n          <button onClick={() => setAScore(aScore + POINT_VALUES.mount)}>\n            Mount\n          </button>\n          <button onClick={() => setAScore(aScore + POINT_VALUES.back)}>\n            Back\n          </button>\n          <button\n            className={styles.penalty}\n            onClick={() => setAScore(aScore + POINT_VALUES.penalty)}\n          >\n            Penalty\n          </button>\n          <button onClick={() => setAScore(aScore + POINT_VALUES.advantage)}>\n            Advantage\n          </button>\n        </div>\n        <div className={styles.competitor}>\n          <button onClick={() => setBScore(bScore + POINT_VALUES.takeDown)}>\n            Take Down\n          </button>\n          <button onClick={() => setBScore(bScore + POINT_VALUES.sweep)}>\n            Sweep\n          </button>\n          <button onClick={() => setBScore(bScore + POINT_VALUES.kneeOnBelly)}>\n            Knee on Belly\n          </button>\n          <button onClick={() => setBScore(bScore + POINT_VALUES.pass)}>\n            Pass\n          </button>\n          <button onClick={() => setBScore(bScore + POINT_VALUES.mount)}>\n            Mount\n          </button>\n          <button onClick={() => setBScore(bScore + POINT_VALUES.back)}>\n            Back\n          </button>\n          <button\n            className={styles.penalty}\n            onClick={() => setBScore(bScore + POINT_VALUES.penalty)}\n          >\n            Penalty\n          </button>\n          <button onClick={() => setBScore(bScore + POINT_VALUES.advantage)}>\n            Advantage\n          </button>\n        </div>\n      </div>\n      <button\n        className={styles.reset}\n        onClick={() => {\n          setAScore(0);\n          setBScore(0);\n        }}\n      >\n        Reset\n      </button>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Scoreboard from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Scoreboard />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}